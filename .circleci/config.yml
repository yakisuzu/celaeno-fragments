version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:11
    steps:
      - checkout
      - restore_cache:
          key: sbt-cache
      - run: sbt update clean scalafmt test assembly
      - save_cache:
          key: sbt-cache
          paths:
            - "~/.ivy2/cache"
            - "~/.sbt"
            - "~/.m2"
            - project/target
      - persist_to_workspace:
          root: .
          paths:
            - ops
  gke_deploy:
    # https://cloud.google.com/container-registry/docs/pushing-and-pulling?hl=ja
    environment:
      # CircleCIにて
      # APP_NAME: ""
      # PROJECT_ID: ""
      # CLUSTER_NAME: ""
      # CLOUDSDK_COMPUTE_ZONE: ""
      # CLOUDSDK_COMPUTE_REGION: ""
      # GCLOUD_SERVICE_KEY_ENCODED: ""
    docker:
      - image: google/cloud-sdk:latest
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: .
      - run:
          name: gcloud setup
          command: |
            gcloud config configurations create ${PROJECT_ID} 2> /dev/null
            gcloud config configurations activate ${PROJECT_ID}
            gcloud config set project ${PROJECT_ID}
            gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
            gcloud config set compute/region ${CLOUDSDK_COMPUTE_REGION}
            echo ${GCLOUD_SERVICE_KEY_ENCODED} | base64 -di | gcloud auth activate-service-account --key-file=-
            gcloud config configurations list
            gcloud auth configure-docker --quiet
      - run:
          name: kubectl setup
          command: |
            gcloud container clusters get-credentials ${CLUSTER_NAME}
      - run:
          name: kustomize setup
          command: |
            curl -s https://api.github.com/repos/kubernetes-sigs/kustomize/releases/latest |\
              grep browser_download |\
              grep linux |\
              cut -d '"' -f 4 |\
              xargs curl -O -L
            mv kustomize_*_linux_amd64 /usr/local/bin/kustomize
            chmod u+x /usr/local/bin/kustomize
      - run:
          name: docker build
          command: docker build -t asia.gcr.io/${PROJECT_ID}/${APP_NAME}:${CIRCLE_SHA1} ops/app
      - run:
          name: gcr push
          command: docker push asia.gcr.io/${PROJECT_ID}/${APP_NAME}:${CIRCLE_SHA1}
      - run:
          name: gke releasse
          command: |
            ./ops/k8s/overlays/production/build.sh "asia.gcr.io/${PROJECT_ID}/${APP_NAME}:${CIRCLE_SHA1}"
            kubectl apply -f ./ops/k8s/manifest/prd-k8s.yaml
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              only: /.*/
      - gke_deploy:
          requires:
            - build
          filters:
            branches:
              only: master
